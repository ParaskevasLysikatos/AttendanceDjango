# Generated by Django 3.1.7 on 2021-06-15 11:17

import django.contrib.auth.models
import django.core.files.storage
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Departments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('industry_id', models.IntegerField()),
                ('parent_id', models.IntegerField()),
                ('department_name', models.CharField(max_length=100, unique=True)),
                ('department_created_date', models.DateTimeField(auto_now_add=True)),
                ('active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Devices',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_location', models.CharField(max_length=100, unique=True)),
                ('device_ip', models.CharField(max_length=100, unique=True)),
                ('device_port', models.IntegerField()),
                ('device_created_date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Event_log',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=100)),
                ('staff_card', models.IntegerField()),
                ('ip_address', models.CharField(blank=True, max_length=100, null=True)),
                ('function_event', models.CharField(max_length=100)),
                ('function_used_info', models.CharField(max_length=500)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Industry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('address', models.CharField(max_length=100)),
                ('afm', models.IntegerField(unique=True)),
                ('logo', models.ImageField(blank=True, max_length=200, null=True, storage=django.core.files.storage.FileSystemStorage(location='/media/'), upload_to='')),
                ('logoPath', models.CharField(blank=True, max_length=300, null=True)),
                ('general_work_range_from', models.TimeField(blank=True, null=True)),
                ('general_work_range_to', models.TimeField(blank=True, null=True)),
                ('hrms_connect', models.BooleanField(default=False)),
                ('hrms_ip', models.CharField(blank=True, max_length=100, null=True)),
                ('hrms_port', models.IntegerField(blank=True, null=True)),
                ('hrms_service_name', models.CharField(blank=True, max_length=100, null=True)),
                ('hrms_username', models.CharField(blank=True, max_length=100, null=True)),
                ('hrms_password', models.CharField(blank=True, max_length=100, null=True)),
                ('hrms_schema', models.CharField(blank=True, max_length=100, null=True)),
                ('hrms_com_id', models.IntegerField(blank=True, null=True, unique=True)),
                ('industry_settings_created_date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='LoggedIn',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=200, unique=True)),
                ('user_card', models.IntegerField()),
                ('user_member', models.IntegerField()),
                ('token', models.CharField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='Members_team',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('member_team_name', models.CharField(max_length=100, unique=True)),
                ('member_team_weight', models.IntegerField(unique=True)),
                ('member_team_created_date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Relation_types',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('relation_type_name', models.CharField(max_length=100, unique=True)),
                ('relation_type_created_date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Roles',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role_name', models.CharField(max_length=100, unique=True)),
                ('role_created_date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Signatures',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('signature_name', models.CharField(max_length=100, unique=True)),
                ('signature_created_date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Staff_holidays',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('staff_card', models.IntegerField()),
                ('hrms_id', models.IntegerField(blank=True, null=True)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('date_from', models.DateTimeField()),
                ('date_to', models.DateTimeField()),
                ('description', models.CharField(max_length=100)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'unique_together': {('staff_card', 'date_from')},
            },
        ),
        migrations.CreateModel(
            name='Staff_department_info',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('department_id', models.IntegerField()),
                ('staff_card', models.IntegerField()),
                ('role', models.CharField(max_length=100)),
                ('apply_from', models.DateField()),
                ('apply_to', models.DateField()),
                ('start_of_work', models.TimeField()),
                ('end_of_work', models.TimeField()),
                ('spasto', models.BooleanField(default=False)),
                ('start_of_work2', models.TimeField(blank=True, null=True)),
                ('end_of_work2', models.TimeField(blank=True, null=True)),
                ('Monday', models.BooleanField(default=True)),
                ('Tuesday', models.BooleanField(default=True)),
                ('Wednesday', models.BooleanField(default=True)),
                ('Thursday', models.BooleanField(default=True)),
                ('Friday', models.BooleanField(default=True)),
                ('Saturday', models.BooleanField(default=False)),
                ('Sunday', models.BooleanField(default=False)),
                ('staff_department_info_created_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'unique_together': {('staff_card', 'department_id')},
            },
        ),
        migrations.CreateModel(
            name='Staff_attendance_rearranged_report',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('staff_card', models.IntegerField()),
                ('username', models.CharField(max_length=100)),
                ('device_name', models.CharField(max_length=100)),
                ('department_name', models.CharField(max_length=100)),
                ('attendance_time_in', models.TimeField(null=True)),
                ('attendance_time_out', models.TimeField(null=True)),
                ('attendance_time_in2', models.TimeField(null=True)),
                ('attendance_time_out2', models.TimeField(null=True)),
                ('day', models.DateField()),
                ('wrario', models.CharField(blank=True, max_length=100, null=True)),
                ('should_work_hours', models.TimeField(blank=True, null=True)),
                ('worked_hours_in_range', models.TimeField(null=True)),
                ('worked_hours', models.TimeField(null=True)),
                ('wrario2', models.CharField(blank=True, max_length=100, null=True)),
                ('should_work_hours2', models.TimeField(blank=True, null=True)),
                ('worked_hours_in_range2', models.TimeField(null=True)),
                ('worked_hours2', models.TimeField(null=True)),
                ('attendance_rearranged_report_created_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'unique_together': {('staff_card', 'day', 'attendance_time_in')},
            },
        ),
        migrations.CreateModel(
            name='Staff_attendance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_card_number', models.IntegerField()),
                ('user_card_id', models.IntegerField()),
                ('user_uid', models.IntegerField()),
                ('username', models.CharField(max_length=100)),
                ('device_name', models.CharField(max_length=100)),
                ('attendance_dateTime', models.DateTimeField()),
                ('attendance_date', models.DateField()),
                ('attendance_time', models.TimeField()),
            ],
            options={
                'unique_together': {('user_uid', 'attendance_dateTime')},
            },
        ),
        migrations.CreateModel(
            name='Holidays',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_from', models.DateField(unique=True)),
                ('date_to', models.DateField()),
                ('description', models.CharField(max_length=100)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'unique_together': {('date_from', 'date_to')},
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(max_length=100, unique=True)),
                ('email', models.EmailField(blank=True, max_length=150, null=True, unique=True)),
                ('device_card_id', models.IntegerField(blank=True, null=True, unique=True)),
                ('device_card_number', models.IntegerField(blank=True, null=True, unique=True)),
                ('hrms_id', models.IntegerField(blank=True, null=True)),
                ('relation_type', models.CharField(blank=True, max_length=100, null=True)),
                ('fathers_name', models.CharField(blank=True, max_length=100, null=True)),
                ('mothers_name', models.CharField(blank=True, max_length=100, null=True)),
                ('phone', models.BigIntegerField(blank=True, null=True)),
                ('works_on_holidays', models.BooleanField(default=False)),
                ('member_team_name', models.CharField(blank=True, max_length=100, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'unique_together': {('first_name', 'last_name', 'fathers_name')},
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
